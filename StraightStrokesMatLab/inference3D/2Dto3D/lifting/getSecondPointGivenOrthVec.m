function p3D_out = getSecondPointGivenOrthVec(K, R, t, u, v, p3D_in, orth_ax_dir)

denom1 = (K(1,1)*K(2,2)*K(3,3) - K(1,1)*K(2,3)*K(3,2) - K(1,2)*K(2,1)*K(3,3) + K(1,2)*K(2,3)*K(3,1) + K(1,3)*K(2,1)*K(3,2) - K(1,3)*K(2,2)*K(3,1));
rrr = (R(1,1)*R(2,2)*R(3,3) - R(1,1)*R(2,3)*R(3,2) - R(1,2)*R(2,1)*R(3,3) + R(1,2)*R(2,3)*R(3,1) + R(1,3)*R(2,1)*R(3,2) - R(1,3)*R(2,2)*R(3,1));

d1 = (K(1,1)*K(2,2) - K(1,2)*K(2,1));
d2 = (K(1,1)*K(2,3) - K(1,3)*K(2,1));
d3 = (K(1,2)*K(2,3) - K(1,3)*K(2,2));

d4 = (K(2,1)*K(3,2) - K(2,2)*K(3,1));
d5 = (K(2,1)*K(3,3) - K(2,3)*K(3,1));
d6 = (K(2,2)*K(3,3) - K(2,3)*K(3,2));

d7 = (K(1,1)*K(3,2) - K(1,2)*K(3,1));
d8 = (K(1,1)*K(3,3) - K(1,3)*K(3,1));
d9 = (K(1,2)*K(3,3) - K(1,3)*K(3,2));

m1 = (d1 + u*d4 - v*d7)/denom1;
m2 = (d2 + u*d5 - v*d8)/denom1;
m3 = (d3 + u*d6 - v*d9)/denom1;

r1 = (R(1,1)*R(2,2) - R(1,2)*R(2,1));
r2 = (R(1,1)*R(2,3) - R(1,3)*R(2,1));
r3 = (R(1,2)*R(2,3) - R(1,3)*R(2,2));

r4 = (R(2,1)*R(3,2) - R(2,2)*R(3,1));
r5 = (R(2,1)*R(3,3) - R(2,3)*R(3,1));
r6 = (R(2,2)*R(3,3) - R(2,3)*R(3,2));

r7 = (R(1,1)*R(3,2) - R(1,2)*R(3,1));
r8 = (R(1,1)*R(3,3) - R(1,3)*R(3,1));
r9 = (R(1,2)*R(3,3) - R(1,3)*R(3,2));

rt1 = (R(1,2)*R(2,3)*t(3) - R(1,3)*R(2,2)*t(3) - R(1,2)*R(3,3)*t(2) + R(1,3)*R(3,2)*t(2) + R(2,2)*R(3,3)*t(1) - R(2,3)*R(3,2)*t(1));
rt2 = (R(1,1)*R(2,3)*t(3) - R(1,3)*R(2,1)*t(3) - R(1,1)*R(3,3)*t(2) + R(1,3)*R(3,1)*t(2) + R(2,1)*R(3,3)*t(1) - R(2,3)*R(3,1)*t(1));
rt3 = (R(1,1)*R(2,2)*t(3) - R(1,2)*R(2,1)*t(3) - R(1,1)*R(3,2)*t(2) + R(1,2)*R(3,1)*t(2) + R(2,1)*R(3,2)*t(1) - R(2,2)*R(3,1)*t(1));

x = orth_ax_dir(1);
y = orth_ax_dir(2);
z = orth_ax_dir(3);

lambda = (x*(p3D_in(1) + rt1/rrr) + y*(p3D_in(2) - rt2/rrr) + z*(p3D_in(3) + rt3/rrr))/((x*(m1*r3 + m3*r6 + m2*r9))/rrr - (y*(m1*r2 + m3*r5 + m2*r8))/rrr + (z*(m1*r1 + m3*r4 + m2*r7))/rrr);



p3D_out(1) = - rt1/rrr + ...
              (r3*m1 + r9*m2 + r6*m3)*lambda/rrr;
          
p3D_out(2) =  rt2/rrr - ...
              ( r2*m1 + r8*m2 + r5*m3)*lambda/rrr;

p3D_out(3) =  - rt3/rrr + ...
               (r1*m1  + r7*m2 + r4*m3)*lambda/rrr;
    


end


  
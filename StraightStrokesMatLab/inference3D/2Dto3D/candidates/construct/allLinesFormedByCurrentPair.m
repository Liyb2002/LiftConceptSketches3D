% Description:
% Creates candidate lines formed by the current pair of intersections,
% where one intersection is an intersection with multiple candiates.

function [candidate_lines] = ...
                    allLinesFormedByCurrentPair(...
                            strokes_topology, ...
                            candidate_lines, ...
                            intersections, ...
                            ind_strk_mltpl_cnddts, ...
                            ind_intrsctn_mltpl_cnddts, ...
                            ind_inter_pair,...
                            cur_stroke,...
                            cam_param)
    
    if ~isfield(strokes_topology(ind_strk_mltpl_cnddts), 'candidate_lines')
        return;
    end
    
    num_candidate_lines = length(candidate_lines);
    
    num_candidate_lines__ind_strk_mltpl_cnddts = length(strokes_topology(ind_strk_mltpl_cnddts).candidate_lines);
    
    for hj = 1:num_candidate_lines__ind_strk_mltpl_cnddts

        [inter_coord_3D, ~] = ...
                opt3Dpos2DProj( cat(1,intersections(ind_intrsctn_mltpl_cnddts).coordinates2D), cam_param, ...
                            strokes_topology(ind_strk_mltpl_cnddts).candidate_lines(hj).coordinates3D_prior(1, 1:3), ...
                            strokes_topology(ind_strk_mltpl_cnddts).candidate_lines(hj).coordinates3D_prior(1, 4:6));
       
       
       % Form a candidate line        
       num_candidate_lines = num_candidate_lines + 1;
       intersections__assigned = ind_inter_pair;
       intersections__mult_cnddts = ind_intrsctn_mltpl_cnddts;
       intersections__mult_cnddts_ind = hj;
       inds_jnts_strks{1} = ind_strk_mltpl_cnddts;
        
       
       candidate_line = initialiseCandidateLines(1,...
                            cat(1,intersections(ind_inter_pair).coordinates3D),...
                            inter_coord_3D,...
                            [ind_inter_pair ind_intrsctn_mltpl_cnddts],...
                            intersections__assigned,...
                            intersections__mult_cnddts,...
                            intersections__mult_cnddts_ind,...
                            inds_jnts_strks,...
                            cur_stroke,...
                            cam_param);
        
        if num_candidate_lines>1
            candidate_lines(num_candidate_lines) = candidate_line;
        else
            candidate_lines = candidate_line;
        end
       
    end
            
end
